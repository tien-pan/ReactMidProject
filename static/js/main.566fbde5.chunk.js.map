{"version":3,"sources":["Components/demo_97.js","Components/demolist_97.js","Components/searchbox_97.js","Components/scroll_97.js","Components/demos_97.js","Containers/App.js","serviceWorker.js","index.js"],"names":["Demo97","img","title","content","className","src","alt","Demolist97","demos","map","user","i","key","SearchBox97","searchChange","type","placeholder","onChange","Scroll97","props","style","overflow","border","height","children","App","onSearchChange","event","setState","searchField","target","value","state","filteredDemos","this","filter","demo","toLowerCase","includes","length","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wNAYeA,EAVA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC1B,OACI,yBAAKC,UAAU,6CACX,yBAAKC,IAAKJ,EAAKK,IAAI,OAAOF,UAAU,QACpC,4BAAKF,GACL,2BAAIC,KCeDI,EAnBI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACI,6BACKA,EAAMC,KAAI,SAACC,EAAKC,GACb,OACI,kBAAC,EAAD,CACIC,IAAKD,EACLV,IAAKS,EAAKT,IACVC,MAAOQ,EAAKR,MACZC,QAASO,EAAKP,eCEvBU,EAZK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACI,yBAAKV,UAAU,OACX,2BAAOA,UAAU,gCACbW,KAAK,SACLC,YAAY,eACZC,SAAUH,MCMXI,EAZE,SAAAC,GAEf,OAEE,yBACAC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAE3DJ,EAAMK,WCTFhB,G,MAAQ,CACjB,CACIP,IAAK,eACLC,MAAO,UACPC,QAAS,sLAEb,CACIF,IAAI,iBACJC,MAAO,YACPC,QAAS,+IAEb,CACIF,IAAI,iBACJC,MAAO,YACPC,QAAS,oIAEb,CACIF,IAAI,eACJC,MAAO,UACPC,QAAS,+HAEb,CACIF,IAAI,eACJC,MAAO,UACPC,QAAS,6HAEb,CACIF,IAAI,eACJC,MAAO,UACPC,QAAS,qFAEb,CACIF,IAAI,eACJC,MAAO,UACPC,QAAS,4FAEb,CACIF,IAAI,kBACJC,MAAO,YACPC,QAAS,iGAEb,CACIF,IAAI,kBACJC,MAAO,YACPC,QAAS,mEAEb,CACIF,IAAI,iBACJC,MAAO,sBACPC,QAAS,mCCJFsB,E,kDAnCX,aAAe,IAAD,8BACV,gBAQJC,eAAiB,SAAAC,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAR1C,EAAKC,MAAQ,CACTxB,MAAOA,EACPqB,YAAa,IAJP,E,qDAaJ,IAAD,OACCI,EAAgBC,KAAKF,MAAMxB,MAAM2B,QAAO,SAAAC,GAC1C,OAAOA,EAAKlC,MAAMmC,cAAcC,SAAS,EAAKN,MAAMH,YAAYQ,kBAGpE,OAA8B,IAA1BH,KAAKF,MAAMxB,MAAM+B,OACV,0CAGH,yBAAKnC,UAAU,MACX,4CACA,kBAAC,EAAD,CAAaU,aAAcoB,KAAKR,iBAChC,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAYlB,MAAOyB,U,GA3BzBO,aCGEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.566fbde5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Demo97 = ({ img, title, content }) => {\r\n    return (\r\n        <div className='bg-pink dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={img} alt=\"demo\" className='mw5'/>\r\n            <h2>{title}</h2>\r\n            <p>{content}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo97;","import React from 'react'\r\nimport Demo97 from './demo_97'\r\n\r\nconst Demolist97 = ({ demos }) => {\r\n    return (\r\n        <div>\r\n            {demos.map((user,i) => {\r\n                return (\r\n                    <Demo97\r\n                        key={i}\r\n                        img={user.img}\r\n                        title={user.title}\r\n                        content={user.content}\r\n                    />\r\n                )\r\n            })\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demolist97\r\n\r\n","import React from 'react'\r\n\r\nconst SearchBox97 = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-light-pink'\r\n                type=\"search\"\r\n                placeholder='search demos'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox97\r\n","import React from 'react';\r\n\r\nconst Scroll97 = props => {\r\n\r\n  return (\r\n\r\n    <div \r\n    style={{ overflow: 'scroll', border: '1px solid black', height: '800px' }}\r\n    >\r\n        {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll97;","export const demos = [\r\n    {\r\n        img: \"/imgs/w1.png\",\r\n        title: \"Week 01\",\r\n        content: \"學習HTML的基礎操作，包含了文字輸入，圖片嵌入，以及連結使用方式\",\r\n    },\r\n    {\r\n        img:\"/imgs/w2-1.png\",\r\n        title: \"Week 02-1\",\r\n        content: \"學習HTML中CSS的基本介紹，介紹了視窗格式及文字的語法\",\r\n    },\r\n    {\r\n        img:'/imgs/w2-2.png',\r\n        title: \"Week 02-2\",\r\n        content: \"學習HTML中CSS的基本介紹，包含了Margin、Padding、Border的關係\",\r\n    },\r\n    {\r\n        img:'/imgs/w3.png',\r\n        title: \"Week 03\",\r\n        content: \"學習不使用外部連結CSS以及JS的方式寫出完整的HTML\",\r\n    },\r\n    {\r\n        img:'/imgs/w4.png',\r\n        title: \"Week 04\",\r\n        content: \"學習Java Script的基本使用方式以及簡易的JS語言編譯\",\r\n    },\r\n    {\r\n        img:'/imgs/w5.png',\r\n        title: \"Week 05\",\r\n        content: \"學習Bootstrap的基本概念以及Navbar應用\",\r\n    },\r\n    {\r\n        img:\"/imgs/w8.png\",\r\n        title: \"Week 08\",\r\n        content: \"學習Card的應用以及Font Awesome的使用方法\",\r\n    },\r\n    {\r\n        img:\"/imgs/w12-1.png\",\r\n        title: \"Week 12-1\",\r\n        content: \"使用HTML及JS語言製作簡單的TICTACTOE小遊戲\",\r\n    },\r\n    {\r\n        img:'/imgs/w12-2.png',\r\n        title: \"Week 12-2\",\r\n        content: \"學習使用CSS設置背景圖片\",\r\n    },\r\n    {\r\n        img:'/imgs/this.png',\r\n        title: \"React Robot Friends\",\r\n        content: \"React網頁實作\",\r\n    },\r\n];\r\n  ","import React, { Component } from 'react'\n// import { robots } from './robots'\nimport Demolist97 from '../Components/demolist_97';\nimport SearchBox97 from '../Components/searchbox_97';\nimport Scroll97 from '../Components/scroll_97';\nimport './App.css';\nimport { demos } from '../Components/demos_97';\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            demos: demos,\n            searchField: ''\n        }\n    }\n\n\n    onSearchChange = event => {\n        this.setState({ searchField: event.target.value });\n    }\n\n    render() {\n        const filteredDemos = this.state.demos.filter(demo => {\n            return demo.title.toLowerCase().includes(this.state.searchField.toLowerCase());\n        });\n\n        if (this.state.demos.length===0){\n            return <h1>Loading...</h1>\n        }else{\n            return (\n                <div className=\"tc\">\n                    <h1>Class Demos.</h1>\n                    <SearchBox97 searchChange={this.onSearchChange} />\n                    <Scroll97>\n                        <Demolist97 demos={filteredDemos} />\n                    </Scroll97>\n                </div>\n            )\n        }\n    }\n\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}